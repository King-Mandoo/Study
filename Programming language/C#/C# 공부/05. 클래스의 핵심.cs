--------------------------------------------------------------------------------------------------------
우선 이게 제일 잘 요약되어 있는 한문장이다.     -->    타입(class) = 속성(field) + 행위(method)
--------------------------------------------------------------------------------------------------------
class 클래스_명                       
{
   // 속성 정의;
   // 행위 정의; 
} 
--------------------------------------------------------------------------------------------------------
                      속성 정의 : string Title;          <-- 이렇게 정의된 속성을 "필드(Field)"라고 부른다.
                                 int Pagecount;
                                 decimal ISBN13;
                                 
           *필드에 값을 대입 : 객체.필드명 = 필드의_타입과_일치하는_표현식;
             
                             gulliver.Title = "걸리버 여행기";
                             gulliver.Pagecount = 500;
                             gulliver.ISBN13 = 97788583958139m;
            
--------------------------------------------------------------------------------------------------------              
                      행위 정의 : 메소드(method)
                      
using System;

namespace ConsoleApp2
{
    class Mathematics
    {
        public int f(int x)     // public을 지정하지 않으면 기본적으로 클래스 안에 정의되는 모든 메서드는 외부에서 사용할 수 없다.
        {
            return x * x;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Mathematics m = new Mathematics();     // Mathematics 클래스의 객체 m 생성
            int result = m.f(5);            
            Console.WriteLine(result);
        }
    }                    
}                                           *한 번만 사용하면 되는 코드를 메서드로 분리해야 할지에 대해서는 '선택의 문제'지만
                                             해당 코드가 두 번 이상 중복된다면 무조건 메서드로 분리하자.
               
               
                함수의 내부 구조가 어떤 식으로 구현돼 있는지에 대해 외부 개발자에게 굳이 설명할 필요도 없다.
                이와 마찬가지로 그동안 사용했던 Console.WriteLine 메서드도
                그것의 내부 구현이 어떻게 돼 있는지 모르지만 해당 메서드의 값을 전달하려면
                화면에 출력된다는 사실은 알고 있다.. 
                                                   이것이 바로 추상화의 힘이다.
                                                   
--------------------------------------------------------------------------------------------------------
 
                 메서드 역시 간단하게 객체에 속한 함수라고 생각하면 된다. 이로써 멤버 메서드(member method)라고도 불린다.
                 
                 결국 필드와 메서드는 모두 해당 타입의 멤버에 속한다.
                 
                 타입(class) = 속성(field) + 행위(method)
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 
